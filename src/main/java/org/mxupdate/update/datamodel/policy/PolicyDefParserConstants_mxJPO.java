/* Generated By:JavaCC: Do not edit this line. PolicyDefParserConstants.java */
package org.mxupdate.update.datamodel.policy;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface PolicyDefParserConstants_mxJPO {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DESCRIPTION = 5;
  /** RegularExpression Id. */
  int TYPE = 6;
  /** RegularExpression Id. */
  int FORMAT = 7;
  /** RegularExpression Id. */
  int STORE = 8;
  /** RegularExpression Id. */
  int DEFAULTFORMAT = 9;
  /** RegularExpression Id. */
  int ENFORCE = 10;
  /** RegularExpression Id. */
  int DELIMITER = 11;
  /** RegularExpression Id. */
  int SEQUENCE = 12;
  /** RegularExpression Id. */
  int MINORSEQUENCE = 13;
  /** RegularExpression Id. */
  int MAJORSEQUENCE = 14;
  /** RegularExpression Id. */
  int HIDDEN = 15;
  /** RegularExpression Id. */
  int STATE = 16;
  /** RegularExpression Id. */
  int ALLSTATE = 17;
  /** RegularExpression Id. */
  int REGISTEREDNAME = 18;
  /** RegularExpression Id. */
  int REVISION = 19;
  /** RegularExpression Id. */
  int MINORREVISION = 20;
  /** RegularExpression Id. */
  int MAJORREVISION = 21;
  /** RegularExpression Id. */
  int VERSION = 22;
  /** RegularExpression Id. */
  int PROMOTE = 23;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY = 24;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS = 25;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_TRUE = 26;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_NOT = 27;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_EXCLAMATION = 28;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_FALSE = 29;
  /** RegularExpression Id. */
  int PUBLISHED = 30;
  /** RegularExpression Id. */
  int REVOKE = 31;
  /** RegularExpression Id. */
  int LOGIN = 32;
  /** RegularExpression Id. */
  int OWNER = 33;
  /** RegularExpression Id. */
  int PUBLIC = 34;
  /** RegularExpression Id. */
  int USER = 35;
  /** RegularExpression Id. */
  int ACTION = 36;
  /** RegularExpression Id. */
  int CHECK = 37;
  /** RegularExpression Id. */
  int OVERRIDE = 38;
  /** RegularExpression Id. */
  int INPUT = 39;
  /** RegularExpression Id. */
  int TRIGGER = 40;
  /** RegularExpression Id. */
  int APPROVE = 41;
  /** RegularExpression Id. */
  int IGNORE = 42;
  /** RegularExpression Id. */
  int REJECT = 43;
  /** RegularExpression Id. */
  int BRANCH = 44;
  /** RegularExpression Id. */
  int SIGNATURE = 45;
  /** RegularExpression Id. */
  int ROUTE = 46;
  /** RegularExpression Id. */
  int KEY = 51;
  /** RegularExpression Id. */
  int ACCESS = 52;
  /** RegularExpression Id. */
  int STATEACCESS_STRING = 57;
  /** RegularExpression Id. */
  int STATEACCESS_SINGLE_STRING = 58;
  /** RegularExpression Id. */
  int STATEACCESS_STRING_APOSTROPHE = 59;
  /** RegularExpression Id. */
  int STATEACCESS_STRING_CHAR = 60;
  /** RegularExpression Id. */
  int FILTER = 61;
  /** RegularExpression Id. */
  int LOCALFILTER = 62;
  /** RegularExpression Id. */
  int ORGANIZATION_ANY = 63;
  /** RegularExpression Id. */
  int ORGANIZATION_SINGLE = 64;
  /** RegularExpression Id. */
  int ORGANIZATION_ANCESTOR = 65;
  /** RegularExpression Id. */
  int ORGANIZATION_DESCENDANT = 66;
  /** RegularExpression Id. */
  int ORGANIZATION_RELATED = 67;
  /** RegularExpression Id. */
  int PROJECT_ANY = 68;
  /** RegularExpression Id. */
  int PROJECT_SINGLE = 69;
  /** RegularExpression Id. */
  int PROJECT_ANCESTOR = 70;
  /** RegularExpression Id. */
  int PROJECT_DESCENDANT = 71;
  /** RegularExpression Id. */
  int PROJECT_RELATED = 72;
  /** RegularExpression Id. */
  int OWNER_ANY = 73;
  /** RegularExpression Id. */
  int OWNER_CONTEXT = 74;
  /** RegularExpression Id. */
  int RESERVE_ANY = 75;
  /** RegularExpression Id. */
  int RESERVE_CONTEXT = 76;
  /** RegularExpression Id. */
  int RESERVE_NO = 77;
  /** RegularExpression Id. */
  int RESERVE_INCLUSIVE = 78;
  /** RegularExpression Id. */
  int MATURITY_ANY = 79;
  /** RegularExpression Id. */
  int MATURITY_NO = 80;
  /** RegularExpression Id. */
  int MATURITY_PUBLIC = 81;
  /** RegularExpression Id. */
  int MATURITY_PROTECTED = 82;
  /** RegularExpression Id. */
  int MATURITY_PRIVATE = 83;
  /** RegularExpression Id. */
  int MATURITY_NOTPRIVATE = 84;
  /** RegularExpression Id. */
  int MATURITY_PPP = 85;
  /** RegularExpression Id. */
  int CATEGORY_ANY = 86;
  /** RegularExpression Id. */
  int CATEGORY_OEM = 87;
  /** RegularExpression Id. */
  int CATEGORY_GOLDPARTNER = 88;
  /** RegularExpression Id. */
  int CATEGORY_PARTNER = 89;
  /** RegularExpression Id. */
  int CATEGORY_SUPPLIER = 90;
  /** RegularExpression Id. */
  int CATEGORY_CUSTOMER = 91;
  /** RegularExpression Id. */
  int CATEGORY_CONTRACTOR = 92;
  /** RegularExpression Id. */
  int STATE_PROPERTY = 93;
  /** RegularExpression Id. */
  int STATE_PROPERTYVAL = 94;
  /** RegularExpression Id. */
  int STATE_PROPERTYTO = 95;
  /** RegularExpression Id. */
  int STATE_PROPERTYTOTYPE = 100;
  /** RegularExpression Id. */
  int SS_CHAR = 101;
  /** RegularExpression Id. */
  int BOOLEAN_TRUE = 106;
  /** RegularExpression Id. */
  int BOOLEAN_FALSE = 107;
  /** RegularExpression Id. */
  int BOOLEAN_TRUESTR = 108;
  /** RegularExpression Id. */
  int BOOLEAN_FALSESTR = 109;
  /** RegularExpression Id. */
  int DELIMITER_CHAR = 114;
  /** RegularExpression Id. */
  int DELIMITER_CHARSTR = 115;
  /** RegularExpression Id. */
  int LS_CURLY_BRACKET_OPEN = 120;
  /** RegularExpression Id. */
  int LS_CURLY_BRACKET_CLOSE = 121;
  /** RegularExpression Id. */
  int LS_STRING = 122;
  /** RegularExpression Id. */
  int LS_SINGLE_STRING = 123;
  /** RegularExpression Id. */
  int LS_APOSTROPHE = 124;
  /** RegularExpression Id. */
  int LS_CHAR = 125;
  /** RegularExpression Id. */
  int SL_STRING = 130;
  /** RegularExpression Id. */
  int SL_SINGLE_STRING = 131;
  /** RegularExpression Id. */
  int SL_APOSTROPHE = 132;
  /** RegularExpression Id. */
  int SL_CHAR = 133;
  /** RegularExpression Id. */
  int S_STRING = 138;
  /** RegularExpression Id. */
  int S_SINGLE_STRING = 139;
  /** RegularExpression Id. */
  int S_APOSTROPHE = 140;
  /** RegularExpression Id. */
  int S_CHAR = 141;
  /** RegularExpression Id. */
  int LALL_CURLY_BRACKET_OPEN = 146;
  /** RegularExpression Id. */
  int LALL_ALL = 147;
  /** RegularExpression Id. */
  int L_CURLY_BRACKET_OPEN = 152;
  /** RegularExpression Id. */
  int L_CURLY_BRACKET_CLOSE = 157;
  /** RegularExpression Id. */
  int L_STRING = 158;
  /** RegularExpression Id. */
  int L_SINGLE_STRING = 159;
  /** RegularExpression Id. */
  int L_APOSTROPHE = 160;
  /** RegularExpression Id. */
  int L_CHAR = 161;
  /** RegularExpression Id. */
  int L2_CURLY_BRACKET_OPEN = 162;
  /** RegularExpression Id. */
  int L3_BRACE_STRING = 163;
  /** RegularExpression Id. */
  int L3_CHAR = 164;
  /** RegularExpression Id. */
  int L4_CURLY_BRACKET_CLOSE = 165;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int STATEACCESS_EXPECTED = 1;
  /** Lexical state. */
  int STATEACCESS_STRING_EXPECTED = 2;
  /** Lexical state. */
  int STATE_PROPERTYTO_EXPECTED = 3;
  /** Lexical state. */
  int B_EXPECTED = 4;
  /** Lexical state. */
  int D_EXPECTED = 5;
  /** Lexical state. */
  int LS_EXPECTED = 6;
  /** Lexical state. */
  int SL_EXPECTED = 7;
  /** Lexical state. */
  int S_EXPECTED = 8;
  /** Lexical state. */
  int LALL_EXPECTED = 9;
  /** Lexical state. */
  int L_EXPECTED = 10;
  /** Lexical state. */
  int L2_EXPECTED = 11;
  /** Lexical state. */
  int L3_EXPECTED = 12;
  /** Lexical state. */
  int L4_EXPECTED = 13;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"description\"",
    "\"type\"",
    "\"format\"",
    "\"store\"",
    "\"defaultformat\"",
    "\"enforce\"",
    "\"delimiter\"",
    "\"sequence\"",
    "\"minorsequence\"",
    "\"majorsequence\"",
    "\"hidden\"",
    "\"state\"",
    "\"allstate\"",
    "\"registeredName\"",
    "\"revision\"",
    "\"minorrevision\"",
    "\"majorrevision\"",
    "\"version\"",
    "\"promote\"",
    "\"checkouthistory\"",
    "\"enforcereserveaccess\"",
    "<ENFORCERESERVEACCESS_TRUE>",
    "\"notenforcereserveaccess\"",
    "\"!enforcereserveaccess\"",
    "<ENFORCERESERVEACCESS_FALSE>",
    "\"published\"",
    "\"revoke\"",
    "\"login\"",
    "\"owner\"",
    "\"public\"",
    "\"user\"",
    "\"action\"",
    "\"check\"",
    "\"override\"",
    "\"input\"",
    "\"trigger\"",
    "\"approve\"",
    "\"ignore\"",
    "\"reject\"",
    "\"branch\"",
    "\"signature\"",
    "\"route\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"key\"",
    "<ACCESS>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<STATEACCESS_STRING>",
    "<STATEACCESS_SINGLE_STRING>",
    "\"\\\"\"",
    "<STATEACCESS_STRING_CHAR>",
    "\"filter\"",
    "\"localfilter\"",
    "<ORGANIZATION_ANY>",
    "<ORGANIZATION_SINGLE>",
    "<ORGANIZATION_ANCESTOR>",
    "<ORGANIZATION_DESCENDANT>",
    "<ORGANIZATION_RELATED>",
    "<PROJECT_ANY>",
    "<PROJECT_SINGLE>",
    "<PROJECT_ANCESTOR>",
    "<PROJECT_DESCENDANT>",
    "<PROJECT_RELATED>",
    "<OWNER_ANY>",
    "<OWNER_CONTEXT>",
    "<RESERVE_ANY>",
    "<RESERVE_CONTEXT>",
    "<RESERVE_NO>",
    "<RESERVE_INCLUSIVE>",
    "<MATURITY_ANY>",
    "<MATURITY_NO>",
    "<MATURITY_PUBLIC>",
    "<MATURITY_PROTECTED>",
    "<MATURITY_PRIVATE>",
    "<MATURITY_NOTPRIVATE>",
    "<MATURITY_PPP>",
    "<CATEGORY_ANY>",
    "<CATEGORY_OEM>",
    "<CATEGORY_GOLDPARTNER>",
    "<CATEGORY_PARTNER>",
    "<CATEGORY_SUPPLIER>",
    "<CATEGORY_CUSTOMER>",
    "<CATEGORY_CONTRACTOR>",
    "\"property\"",
    "\"value\"",
    "\"to\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<STATE_PROPERTYTOTYPE>",
    "<SS_CHAR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<BOOLEAN_TRUE>",
    "<BOOLEAN_FALSE>",
    "<BOOLEAN_TRUESTR>",
    "<BOOLEAN_FALSESTR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<DELIMITER_CHAR>",
    "<DELIMITER_CHARSTR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"{\"",
    "\"}\"",
    "<LS_STRING>",
    "<LS_SINGLE_STRING>",
    "\"\\\"\"",
    "<LS_CHAR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<SL_STRING>",
    "<SL_SINGLE_STRING>",
    "\"\\\"\"",
    "<SL_CHAR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<S_STRING>",
    "<S_SINGLE_STRING>",
    "\"\\\"\"",
    "<S_CHAR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"{\"",
    "\"all\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"{\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"}\"",
    "<L_STRING>",
    "<L_SINGLE_STRING>",
    "\"\\\"\"",
    "<L_CHAR>",
    "\"{\"",
    "<L3_BRACE_STRING>",
    "<L3_CHAR>",
    "\"}\"",
    "\"{\"",
    "\"}\"",
  };

}
