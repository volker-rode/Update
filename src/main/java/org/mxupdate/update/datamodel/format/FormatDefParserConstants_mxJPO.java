/* Generated By:JavaCC: Do not edit this line. FormatDefParserConstants.java */
package org.mxupdate.update.datamodel.format;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface FormatDefParserConstants_mxJPO {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DESCRIPTION = 5;
  /** RegularExpression Id. */
  int HIDDEN_TRUE = 6;
  /** RegularExpression Id. */
  int HIDDEN_FALSE = 7;
  /** RegularExpression Id. */
  int MIME = 8;
  /** RegularExpression Id. */
  int SUFFIX = 9;
  /** RegularExpression Id. */
  int TYPE = 10;
  /** RegularExpression Id. */
  int VERSION = 11;
  /** RegularExpression Id. */
  int VIEW = 12;
  /** RegularExpression Id. */
  int EDIT = 13;
  /** RegularExpression Id. */
  int PRINT = 14;
  /** RegularExpression Id. */
  int PROPERTY = 15;
  /** RegularExpression Id. */
  int PROPERTYTO = 16;
  /** RegularExpression Id. */
  int PROPERTYVAL = 17;
  /** RegularExpression Id. */
  int STRING = 22;
  /** RegularExpression Id. */
  int SINGLE = 23;
  /** RegularExpression Id. */
  int APOSTROPHE = 24;
  /** RegularExpression Id. */
  int CHAR = 25;
  /** RegularExpression Id. */
  int ADMINTYPE_STRING = 30;
  /** RegularExpression Id. */
  int ADMINTYPE_SINGLE = 31;
  /** RegularExpression Id. */
  int ADMINTYPE_APOSTROPHE = 32;
  /** RegularExpression Id. */
  int ADMINTYPE_CHAR = 33;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int STRING_EXPECTED = 1;
  /** Lexical state. */
  int ADMINREF_EXPECTED = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"description\"",
    "\"hidden\"",
    "\"!hidden\"",
    "\"mime\"",
    "\"suffix\"",
    "\"type\"",
    "\"version\"",
    "\"view\"",
    "\"edit\"",
    "\"print\"",
    "\"property\"",
    "\"to\"",
    "\"value\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<STRING>",
    "<SINGLE>",
    "\"\\\"\"",
    "<CHAR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<ADMINTYPE_STRING>",
    "<ADMINTYPE_SINGLE>",
    "\"\\\"\"",
    "<ADMINTYPE_CHAR>",
  };

}
